<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00069" kind="class" language="C++" prot="public">
    <compoundname>acme::aabb</compoundname>
    <includes refid="a00005" local="no">acme_aabb.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="a00069_1a30c38d287590f2b2ab406bd922b23ebc" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="a00069" kindref="compound">aabb</ref> const  &gt;</type>
        <definition>typedef std::shared_ptr&lt;aabb const&gt; acme::aabb::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
<para>Shared pointer to const aabb object used in <ref refid="a00073" kindref="compound">AABBtree</ref> routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="57" column="29" bodyfile="include/acme_aabb.hh" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00069_1aaa0c2fcc57d145b26f177ca0bf8f9761" prot="public" static="no">
        <type>std::pair&lt; <ref refid="a00069_1a30c38d287590f2b2ab406bd922b23ebc" kindref="member">ptr</ref>, <ref refid="a00069_1a30c38d287590f2b2ab406bd922b23ebc" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::pair&lt;ptr, ptr&gt; acme::aabb::pairptr</definition>
        <argsstring></argsstring>
        <name>pairptr</name>
        <briefdescription>
<para>Pair of pointers to const aabb objects used in <ref refid="a00073" kindref="compound">AABBtree</ref> routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="58" column="23" bodyfile="include/acme_aabb.hh" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00069_1a992e467202cf0239f3b089878518861a" prot="public" static="no">
        <type>std::vector&lt; <ref refid="a00069_1a30c38d287590f2b2ab406bd922b23ebc" kindref="member">ptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;ptr&gt; acme::aabb::vecptr</definition>
        <argsstring></argsstring>
        <name>vecptr</name>
        <briefdescription>
<para>Vector of pointers to const aabb objects used in <ref refid="a00073" kindref="compound">AABBtree</ref> routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="59" column="25" bodyfile="include/acme_aabb.hh" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="a00069_1a3b3de0421f5d4846c7c50af711efa760" prot="public" static="no">
        <type>std::vector&lt; <ref refid="a00069_1aaa0c2fcc57d145b26f177ca0bf8f9761" kindref="member">pairptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;pairptr&gt; acme::aabb::vecpairptr</definition>
        <argsstring></argsstring>
        <name>vecpairptr</name>
        <briefdescription>
<para>Vector of pairs of pointers to const aabb objects used in <ref refid="a00073" kindref="compound">AABBtree</ref> routines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="60" column="25" bodyfile="include/acme_aabb.hh" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00069_1af393e44dad8c622a4086ab28cf8a00c9" prot="private" static="no" mutable="no">
        <type><ref refid="a00105" kindref="compound">point</ref></type>
        <definition>point acme::aabb::m_min</definition>
        <argsstring></argsstring>
        <name>m_min</name>
        <briefdescription>
<para>Box maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="63" column="11" bodyfile="include/acme_aabb.hh" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00069_1a0a393355c87fd4d1b71a04e0fedce325" prot="private" static="no" mutable="no">
        <type><ref refid="a00105" kindref="compound">point</ref></type>
        <definition>point acme::aabb::m_max</definition>
        <argsstring></argsstring>
        <name>m_max</name>
        <briefdescription>
<para>Box minimum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="64" column="11" bodyfile="include/acme_aabb.hh" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00069_1a73890ba986225bfd47f338adfe9fc649" prot="private" static="no" mutable="no">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
        <definition>integer acme::aabb::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
<para>Box id (may be used in external algorithms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="65" column="13" bodyfile="include/acme_aabb.hh" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00069_1addce98bd96d946bc9c057cfdcaa80ad3" prot="private" static="no" mutable="no">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
        <definition>integer acme::aabb::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <briefdescription>
<para>Box rank (may be used in external algorithms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="66" column="13" bodyfile="include/acme_aabb.hh" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00069_1a8fd26ac1bc7103cee0773cab3261d06a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::~aabb</definition>
        <argsstring>()</argsstring>
        <name>~aabb</name>
        <briefdescription>
<para>Box class destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="70" column="5" bodyfile="include/acme_aabb.hh" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a3ec53e2a3c88e6de084a823cab1da54c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>(const aabb &amp;)=default</argsstring>
        <name>aabb</name>
        <param>
          <type>const <ref refid="a00069" kindref="compound">aabb</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Box copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a61caf6ef04209e324a09cee4b2933be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>(aabb &amp;&amp;)=default</argsstring>
        <name>aabb</name>
        <param>
          <type><ref refid="a00069" kindref="compound">aabb</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Box move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="76" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a8c860f74aa21ffe1c45801f397bf7d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>()</argsstring>
        <name>aabb</name>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="79" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ad58ed04134f98610f0d7292648bdd42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>(real min_x, real min_y, real min_z, real max_x, real max_y, real max_z, integer id=0, integer ipos=0)</argsstring>
        <name>aabb</name>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>min_x</declname>
          <briefdescription><para>Input x value of aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>min_y</declname>
          <briefdescription><para>Input y value of aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>min_z</declname>
          <briefdescription><para>Input z value of aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>max_x</declname>
          <briefdescription><para>Input x value of aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>max_y</declname>
          <briefdescription><para>Input y value of aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>max_z</declname>
          <briefdescription><para>Input z value of aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>id</declname>
          <defval>0</defval>
          <briefdescription><para>Input id value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>ipos</declname>
          <defval>0</defval>
          <briefdescription><para>Input rank value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a2ab58e186b398c67eb8e8688f24268d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>(point const &amp;min, point const &amp;max, integer id=0, integer ipos=0)</argsstring>
        <name>aabb</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>min</declname>
          <briefdescription><para>Input aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>max</declname>
          <briefdescription><para>Input aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>id</declname>
          <defval>0</defval>
          <briefdescription><para>Input aabb id value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>ipos</declname>
          <defval>0</defval>
          <briefdescription><para>Input aabb rank value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="94" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ab1900a0ec39223f297efbcfa41b367ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>acme::aabb::aabb</definition>
        <argsstring>(std::vector&lt; aabb::ptr &gt; const &amp;boxes, integer id=0, integer ipos=0)</argsstring>
        <name>aabb</name>
        <param>
          <type>std::vector&lt; <ref refid="a00069_1a30c38d287590f2b2ab406bd922b23ebc" kindref="member">aabb::ptr</ref> &gt; const &amp;</type>
          <declname>boxes</declname>
          <briefdescription><para>Input reference to vector of boxes </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>id</declname>
          <defval>0</defval>
          <briefdescription><para>Input aabb id value </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref></type>
          <declname>ipos</declname>
          <defval>0</defval>
          <briefdescription><para>Input aabb rank value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Box class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="102" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a42fcdeb4dc7507388b7f9fc04150a7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00069" kindref="compound">aabb</ref> &amp;</type>
        <definition>aabb&amp; acme::aabb::operator=</definition>
        <argsstring>(aabb const &amp;aabb_in)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="a00069" kindref="compound">aabb</ref> const &amp;</type>
          <declname>aabb_in</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a322b0336f6697532d2a6f442d6266b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear the aabb domain (set to Not-a-Number) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="115" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ad1a088cbb3b27770245521c941ada782" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::isApprox</definition>
        <argsstring>(aabb const &amp;aabb_in, real tolerance=EPSILON) const</argsstring>
        <name>isApprox</name>
        <param>
          <type><ref refid="a00069" kindref="compound">aabb</ref> const &amp;</type>
          <declname>aabb_in</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>tolerance</declname>
          <defval><ref refid="a00065_1a5be47678e6c38184c3795d1ea41c489d" kindref="member">EPSILON</ref></defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if aabb objects are (almost) equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="119" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a9402b36328edfae4240b2a882b1ae078" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::checkMaxMin</definition>
        <argsstring>(void) const</argsstring>
        <name>checkMaxMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check aabb max and min points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="126" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a0dcb27da6d642b2587570e47313f16bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::updateMaxMin</definition>
        <argsstring>(void)</argsstring>
        <name>updateMaxMin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update and check aabb max and min points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="130" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a0bef71658ea6b964db9261516d7ce19d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00105" kindref="compound">point</ref> const  &amp;</type>
        <definition>point const&amp; acme::aabb::min</definition>
        <argsstring>(void) const</argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get minimum point const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="134" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ad16a1a82fd94c6a54b38012d78c4de1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00105" kindref="compound">point</ref> &amp;</type>
        <definition>point&amp; acme::aabb::min</definition>
        <argsstring>(void)</argsstring>
        <name>min</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get minimum point reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="138" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1af2998fa815aac74b5cc6f561140c158f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref> const  &amp;</type>
        <definition>real const&amp; acme::aabb::min</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>min</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get aabb minimum i-th axis value const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="142" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a25c735e62db22d24959f803f12cffb2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref> &amp;</type>
        <definition>real&amp; acme::aabb::min</definition>
        <argsstring>(size_t i)</argsstring>
        <name>min</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get aabb minimum i-th axis value reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="148" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1aba85ded86e1f80916f5ec9cae9766f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::min</definition>
        <argsstring>(real x, real y, real z)</argsstring>
        <name>min</name>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>x</declname>
          <briefdescription><para>Input x value of aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>y</declname>
          <briefdescription><para>Input y value of aabb minimum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>z</declname>
          <briefdescription><para>Input z value of aabb minimum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set aabb minimum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="154" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ac045d3ace85bdf69f4a23705e6e378c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00105" kindref="compound">point</ref> const  &amp;</type>
        <definition>point const&amp; acme::aabb::max</definition>
        <argsstring>(void) const</argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get aabb maximum point const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="162" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a22cee470769e8802229470cf360ff2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00105" kindref="compound">point</ref> &amp;</type>
        <definition>point&amp; acme::aabb::max</definition>
        <argsstring>(void)</argsstring>
        <name>max</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get aabb maximum point reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="166" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a13b2961ec4a51a759d172ebff91dbd8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref> const  &amp;</type>
        <definition>real const&amp; acme::aabb::max</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>max</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get aabb maximum i-th point axis value const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="170" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1aad1e303b2f609f175cd89eea427ef40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref> &amp;</type>
        <definition>real&amp; acme::aabb::max</definition>
        <argsstring>(size_t i)</argsstring>
        <name>max</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
          <briefdescription><para>Input i-th value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get aabb maximum i-th point axis value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="176" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ac0f44ece118f581b6cdbc38ca2e11dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::max</definition>
        <argsstring>(real x, real y, real z)</argsstring>
        <name>max</name>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>x</declname>
          <briefdescription><para>Input x value of aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>y</declname>
          <briefdescription><para>Input y value of aabb maximum point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>z</declname>
          <briefdescription><para>Input z value of aabb maximum point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set aabb maximum point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="182" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a10b4d691692acaa130eb4f4bcc96eff8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::intersects</definition>
        <argsstring>(aabb const &amp;aabb_in) const</argsstring>
        <name>intersects</name>
        <param>
          <type><ref refid="a00069" kindref="compound">aabb</ref> const &amp;</type>
          <declname>aabb_in</declname>
          <briefdescription><para>Input </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Detect if boxes collide. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="190" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a188e8fc5b78654c46cdd00aaf5be2721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::merged</definition>
        <argsstring>(aabb::vecptr const &amp;boxes)</argsstring>
        <name>merged</name>
        <param>
          <type><ref refid="a00069_1a992e467202cf0239f3b089878518861a" kindref="member">aabb::vecptr</ref> const &amp;</type>
          <declname>boxes</declname>
          <briefdescription><para>Input poiter to vector of boxes </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Build aabb with a vector of pointers to boxes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="196" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a6454e3becfd5589162ea65fa24449762" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
        <definition>real acme::aabb::centerDistance</definition>
        <argsstring>(point const &amp;point_in) const</argsstring>
        <name>centerDistance</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point_in</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Distance of a point to the aabb. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="202" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a5da4ad8bed06f45cc39db938b9ab622f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
        <definition>real acme::aabb::exteriorDistance</definition>
        <argsstring>(point const &amp;point_in) const</argsstring>
        <name>exteriorDistance</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point_in</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Maximum distance of a point to the aabb. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="208" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a3e0ad73c82aeda4c53edea4f835a1563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::clamp</definition>
        <argsstring>(point const &amp;point0_in, point const &amp;point1_in, point const &amp;point2_in)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point0_in</declname>
          <briefdescription><para>Input point 0 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point1_in</declname>
          <briefdescription><para>Input point 1 </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point2_in</declname>
          <briefdescription><para>Input point 2 </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Resize the aabb as the minimum bounding aabb containing three input points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="214" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ac1a182d20a2c480cf0dd9c737a4341de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::clamp</definition>
        <argsstring>(point const point_in[3])</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const</type>
          <declname>point_in</declname>
          <array>[3]</array>
          <briefdescription><para>Input points </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Resize the aabb as the minimum bounding aabb containing three input points. </para>
        </briefdescription>
        <detaileddescription>
<para>Return aabb id const reference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="222" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a38c8b2b6cd2c84ac814e7877cd085cd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref> const  &amp;</type>
        <definition>integer const&amp; acme::aabb::id</definition>
        <argsstring>(void) const</argsstring>
        <name>id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return aabb id reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="228" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1acd4a8c28c467a93f486ce68b112f0995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref> &amp;</type>
        <definition>integer&amp; acme::aabb::id</definition>
        <argsstring>(void)</argsstring>
        <name>id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return aabb position const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="232" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1af73684f608449e773667ad636f20d8f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref> const  &amp;</type>
        <definition>integer const&amp; acme::aabb::pos</definition>
        <argsstring>(void) const</argsstring>
        <name>pos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return aabb position reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="236" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a552c49410be6ec9590e70e06cfd92bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00065_1a9223400d01496dcba963b2f723c89d4a" kindref="member">integer</ref> &amp;</type>
        <definition>integer&amp; acme::aabb::pos</definition>
        <argsstring>(void)</argsstring>
        <name>pos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="240" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ae677441c35b668ff89bcc04fbcd24d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acme::aabb::translate</definition>
        <argsstring>(point const &amp;vector_in)</argsstring>
        <name>translate</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>vector_in</declname>
          <briefdescription><para>Input translation vector </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Translate aabb by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="244" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1a924603b1cad7c7bb11538c29e9e0d514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::isInside</definition>
        <argsstring>(point const &amp;point_in, real tolerance=EPSILON) const</argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="a00105" kindref="compound">point</ref> const &amp;</type>
          <declname>point_in</declname>
          <briefdescription><para>Query point </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>tolerance</declname>
          <defval><ref refid="a00065_1a5be47678e6c38184c3795d1ea41c489d" kindref="member">EPSILON</ref></defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="250" column="5"/>
      </memberdef>
      <memberdef kind="function" id="a00069_1ac0e8660c06963da4172091afe1bcaa53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool acme::aabb::isDegenerated</definition>
        <argsstring>(real tolerance=EPSILON) const</argsstring>
        <name>isDegenerated</name>
        <param>
          <type><ref refid="a00065_1a91745012989657825bc70313039f90a0" kindref="member">real</ref></type>
          <declname>tolerance</declname>
          <defval><ref refid="a00065_1a5be47678e6c38184c3795d1ea41c489d" kindref="member">EPSILON</ref></defval>
          <briefdescription><para>Tolerance </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if aabb is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/acme_aabb.hh" line="257" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Axis-aligebd bounding box class container. </para>
    </briefdescription>
    <detaileddescription>
<para>Axis-aligebd bounding box in 3D space and defined by a &quot;maximum&quot; and a &quot;minimum&quot; point. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>Eigen::Matrix&lt; real, 3, 1 &gt;</label>
      </node>
      <node id="4">
        <label>acme::entity</label>
        <link refid="a00089"/>
      </node>
      <node id="2">
        <label>acme::point</label>
        <link refid="a00105"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>acme::aabb</label>
        <link refid="a00069"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_max</edgelabel>
          <edgelabel>m_min</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/acme_aabb.hh" line="54" column="3" bodyfile="include/acme_aabb.hh" bodystart="55" bodyend="261"/>
    <listofallmembers>
      <member refid="a00069_1a3ec53e2a3c88e6de084a823cab1da54c" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1a61caf6ef04209e324a09cee4b2933be5" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1a8c860f74aa21ffe1c45801f397bf7d9a" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1ad58ed04134f98610f0d7292648bdd42b" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1a2ab58e186b398c67eb8e8688f24268d8" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1ab1900a0ec39223f297efbcfa41b367ab" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>aabb</name></member>
      <member refid="a00069_1a6454e3becfd5589162ea65fa24449762" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>centerDistance</name></member>
      <member refid="a00069_1a9402b36328edfae4240b2a882b1ae078" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>checkMaxMin</name></member>
      <member refid="a00069_1a3e0ad73c82aeda4c53edea4f835a1563" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>clamp</name></member>
      <member refid="a00069_1ac1a182d20a2c480cf0dd9c737a4341de" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>clamp</name></member>
      <member refid="a00069_1a322b0336f6697532d2a6f442d6266b20" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>clear</name></member>
      <member refid="a00069_1a5da4ad8bed06f45cc39db938b9ab622f" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>exteriorDistance</name></member>
      <member refid="a00069_1a38c8b2b6cd2c84ac814e7877cd085cd0" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>id</name></member>
      <member refid="a00069_1acd4a8c28c467a93f486ce68b112f0995" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>id</name></member>
      <member refid="a00069_1a10b4d691692acaa130eb4f4bcc96eff8" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>intersects</name></member>
      <member refid="a00069_1ad1a088cbb3b27770245521c941ada782" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>isApprox</name></member>
      <member refid="a00069_1ac0e8660c06963da4172091afe1bcaa53" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>isDegenerated</name></member>
      <member refid="a00069_1a924603b1cad7c7bb11538c29e9e0d514" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>isInside</name></member>
      <member refid="a00069_1a73890ba986225bfd47f338adfe9fc649" prot="private" virt="non-virtual"><scope>acme::aabb</scope><name>m_id</name></member>
      <member refid="a00069_1a0a393355c87fd4d1b71a04e0fedce325" prot="private" virt="non-virtual"><scope>acme::aabb</scope><name>m_max</name></member>
      <member refid="a00069_1af393e44dad8c622a4086ab28cf8a00c9" prot="private" virt="non-virtual"><scope>acme::aabb</scope><name>m_min</name></member>
      <member refid="a00069_1addce98bd96d946bc9c057cfdcaa80ad3" prot="private" virt="non-virtual"><scope>acme::aabb</scope><name>m_pos</name></member>
      <member refid="a00069_1ac045d3ace85bdf69f4a23705e6e378c3" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>max</name></member>
      <member refid="a00069_1a22cee470769e8802229470cf360ff2b2" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>max</name></member>
      <member refid="a00069_1a13b2961ec4a51a759d172ebff91dbd8c" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>max</name></member>
      <member refid="a00069_1aad1e303b2f609f175cd89eea427ef40b" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>max</name></member>
      <member refid="a00069_1ac0f44ece118f581b6cdbc38ca2e11dbf" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>max</name></member>
      <member refid="a00069_1a188e8fc5b78654c46cdd00aaf5be2721" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>merged</name></member>
      <member refid="a00069_1a0bef71658ea6b964db9261516d7ce19d" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>min</name></member>
      <member refid="a00069_1ad16a1a82fd94c6a54b38012d78c4de1e" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>min</name></member>
      <member refid="a00069_1af2998fa815aac74b5cc6f561140c158f" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>min</name></member>
      <member refid="a00069_1a25c735e62db22d24959f803f12cffb2b" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>min</name></member>
      <member refid="a00069_1aba85ded86e1f80916f5ec9cae9766f29" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>min</name></member>
      <member refid="a00069_1a42fcdeb4dc7507388b7f9fc04150a7f7" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>operator=</name></member>
      <member refid="a00069_1aaa0c2fcc57d145b26f177ca0bf8f9761" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>pairptr</name></member>
      <member refid="a00069_1af73684f608449e773667ad636f20d8f4" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>pos</name></member>
      <member refid="a00069_1a552c49410be6ec9590e70e06cfd92bd6" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>pos</name></member>
      <member refid="a00069_1a30c38d287590f2b2ab406bd922b23ebc" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>ptr</name></member>
      <member refid="a00069_1ae677441c35b668ff89bcc04fbcd24d11" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>translate</name></member>
      <member refid="a00069_1a0dcb27da6d642b2587570e47313f16bf" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>updateMaxMin</name></member>
      <member refid="a00069_1a3b3de0421f5d4846c7c50af711efa760" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>vecpairptr</name></member>
      <member refid="a00069_1a992e467202cf0239f3b089878518861a" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>vecptr</name></member>
      <member refid="a00069_1a8fd26ac1bc7103cee0773cab3261d06a" prot="public" virt="non-virtual"><scope>acme::aabb</scope><name>~aabb</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
