<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00054" kind="class" language="C++" prot="public">
    <compoundname>acme_line</compoundname>
    <basecompoundref refid="a00050" prot="public" virt="non-virtual">acme_entity</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00054_1a6979be333652a4c0f9e2827318173457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::acme_line</definition>
        <argsstring>(in varargin)</argsstring>
        <name>acme_line</name>
        <param>
          <type>in</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>Create a new C++ pointer to line object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Class container for ACME line object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="35" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a3be1dae04b34bdd95284beea861749e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>function</type>
        <definition>function acme_line::type</definition>
        <argsstring>(in self)</argsstring>
        <name>type</name>
        <reimplements refid="a00050_1adadea5f13cd73eeac368db18de967f49">type</reimplements>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Delete C++ pointer to line object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get object type as string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="50" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1ac0f461e8a599254aa4fe8dd98af89de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::getOrigin</definition>
        <argsstring>(in self)</argsstring>
        <name>getOrigin</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get line origin as ACME point object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="58" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1aa7084562df17144d67775fd366b84789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::getDirection</definition>
        <argsstring>(in self)</argsstring>
        <name>getDirection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get line direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="67" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a2aabc1ee5350b3f53b1f58e1e05ac13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::setOrigin</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>setOrigin</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Set line origin with an ACME point object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="75" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1ade4c01182324f83a4bde7727f0781e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::setDirection</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>setDirection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Set line direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="83" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a0dc2295f0281cb6d464e2683248847a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::copy</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>copy</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Copy line object from another line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="91" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a87e043680f63dee9c7ce5b79ecfa5a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::copyByHandle</definition>
        <argsstring>(in self, in handle)</argsstring>
        <name>copyByHandle</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Copy line object from another line handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="103" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a66cd2bdb79caf0cb6008925c66bdaa47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::translate</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>translate</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Translate line by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="111" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1abf88fe2e125124a17ae81b44f863f727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::transform</definition>
        <argsstring>(in self, in varargin)</argsstring>
        <name>transform</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>Transform line by 4x4 affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="119" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1aed6f9aac9cd7de944171f55443c98d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isInside</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isInside</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ACME point is inside the line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="127" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a5c07553c16fc3ab0633585ff1ba38807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isDegenerated</definition>
        <argsstring>(in self)</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Check if line is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="139" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1ad1c3b05508b28915f193b16e9f0b100a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isApprox</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isApprox</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if lines are approximatively equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="147" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a75bd349abe81b30a1cde77d7d65f6a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::normalize</definition>
        <argsstring>(in self)</argsstring>
        <name>normalize</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Normalize direction vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="159" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1acb79de2be2e4ae2b04e492029707345a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::toVector</definition>
        <argsstring>(in self)</argsstring>
        <name>toVector</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Transform line to vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="167" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a08a1a0c2a9f91c1cd934d53162bbd718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::toNormalizedVector</definition>
        <argsstring>(in self)</argsstring>
        <name>toNormalizedVector</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Transform line to normalized vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="175" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a11670adf1cb2100ee8a1df56c48db864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::reverse</definition>
        <argsstring>(in self)</argsstring>
        <name>reverse</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Swap line vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="183" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a95174e4fe0c3455993a0955333f3c895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isParallel</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isParallel</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if line is parallel to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="191" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1abee91e10f98a71fdf17d613ccfe669f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isOrthogonal</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isOrthogonal</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if line is orthogonal to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="199" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a85fc43881e487f9174032c61693df6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isCollinear</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isCollinear</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if line is collinear to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="207" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a90c94a608adbd2cfac40fe187c1c96ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::isCoplanar</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isCoplanar</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if line is coplanar to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="215" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1aa9bf81517652498eb8566a1a0c2d3e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::intersection</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>intersection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Intersect line with an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="223" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a0695affd0981a50963677242b19f581b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::disp</definition>
        <argsstring>(in self)</argsstring>
        <name>disp</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Display object data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="233" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00054_1a2fbeb8a822712f9c35f8a8ab41b4e3f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_line::plot</definition>
        <argsstring>(in self, in figure_name, in color)</argsstring>
        <name>plot</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>figure_name</declname>
        </param>
        <param>
          <type>in</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Plot line object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_line.m" line="241" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00050_1a419b052079bcfcfb4e813365d647cb51" prot="private" static="no" mutable="no">
        <type>Property</type>
        <definition>Property acme_entity::objectHandle</definition>
        <argsstring></argsstring>
        <name>objectHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Class container for ACME entity object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_entity.m" line="34" column="10" bodyfile="acme_entity.m" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>handle</label>
      </node>
      <node id="1">
        <label>acme_line</label>
        <link refid="a00054"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>acme_entity</label>
        <link refid="a00050"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>handle</label>
      </node>
      <node id="1">
        <label>acme_line</label>
        <link refid="a00054"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>acme_entity</label>
        <link refid="a00050"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="acme_line.m" line="26" column="1" bodyfile="acme_line.m" bodystart="27" bodyend="254"/>
    <listofallmembers>
      <member refid="a00050_1aa9604c371b05fe29d288f8229d673d70" prot="public" virt="non-virtual"><scope>acme_line</scope><name>acme_entity</name></member>
      <member refid="a00054_1a6979be333652a4c0f9e2827318173457" prot="public" virt="non-virtual"><scope>acme_line</scope><name>acme_line</name></member>
      <member refid="a00054_1a0dc2295f0281cb6d464e2683248847a3" prot="public" virt="non-virtual"><scope>acme_line</scope><name>copy</name></member>
      <member refid="a00054_1a87e043680f63dee9c7ce5b79ecfa5a29" prot="public" virt="non-virtual"><scope>acme_line</scope><name>copyByHandle</name></member>
      <member refid="a00054_1a0695affd0981a50963677242b19f581b" prot="public" virt="non-virtual"><scope>acme_line</scope><name>disp</name></member>
      <member refid="a00054_1aa7084562df17144d67775fd366b84789" prot="public" virt="non-virtual"><scope>acme_line</scope><name>getDirection</name></member>
      <member refid="a00054_1ac0f461e8a599254aa4fe8dd98af89de4" prot="public" virt="non-virtual"><scope>acme_line</scope><name>getOrigin</name></member>
      <member refid="a00054_1aa9bf81517652498eb8566a1a0c2d3e4d" prot="public" virt="non-virtual"><scope>acme_line</scope><name>intersection</name></member>
      <member refid="a00054_1ad1c3b05508b28915f193b16e9f0b100a" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isApprox</name></member>
      <member refid="a00054_1a85fc43881e487f9174032c61693df6f4" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isCollinear</name></member>
      <member refid="a00054_1a90c94a608adbd2cfac40fe187c1c96ee" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isCoplanar</name></member>
      <member refid="a00054_1a5c07553c16fc3ab0633585ff1ba38807" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isDegenerated</name></member>
      <member refid="a00054_1aed6f9aac9cd7de944171f55443c98d7b" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isInside</name></member>
      <member refid="a00054_1abee91e10f98a71fdf17d613ccfe669f6" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isOrthogonal</name></member>
      <member refid="a00054_1a95174e4fe0c3455993a0955333f3c895" prot="public" virt="non-virtual"><scope>acme_line</scope><name>isParallel</name></member>
      <member refid="a00054_1a75bd349abe81b30a1cde77d7d65f6a07" prot="public" virt="non-virtual"><scope>acme_line</scope><name>normalize</name></member>
      <member refid="a00050_1a419b052079bcfcfb4e813365d647cb51" prot="private" virt="non-virtual"><scope>acme_line</scope><name>objectHandle</name></member>
      <member refid="a00054_1a2fbeb8a822712f9c35f8a8ab41b4e3f5" prot="public" virt="non-virtual"><scope>acme_line</scope><name>plot</name></member>
      <member refid="a00054_1a11670adf1cb2100ee8a1df56c48db864" prot="public" virt="non-virtual"><scope>acme_line</scope><name>reverse</name></member>
      <member refid="a00054_1ade4c01182324f83a4bde7727f0781e07" prot="public" virt="non-virtual"><scope>acme_line</scope><name>setDirection</name></member>
      <member refid="a00054_1a2aabc1ee5350b3f53b1f58e1e05ac13f" prot="public" virt="non-virtual"><scope>acme_line</scope><name>setOrigin</name></member>
      <member refid="a00054_1a08a1a0c2a9f91c1cd934d53162bbd718" prot="public" virt="non-virtual"><scope>acme_line</scope><name>toNormalizedVector</name></member>
      <member refid="a00054_1acb79de2be2e4ae2b04e492029707345a" prot="public" virt="non-virtual"><scope>acme_line</scope><name>toVector</name></member>
      <member refid="a00054_1abf88fe2e125124a17ae81b44f863f727" prot="public" virt="non-virtual"><scope>acme_line</scope><name>transform</name></member>
      <member refid="a00054_1a66cd2bdb79caf0cb6008925c66bdaa47" prot="public" virt="non-virtual"><scope>acme_line</scope><name>translate</name></member>
      <member refid="a00054_1a3be1dae04b34bdd95284beea861749e0" prot="public" virt="virtual"><scope>acme_line</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
