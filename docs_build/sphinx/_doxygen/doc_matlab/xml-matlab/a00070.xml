<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00070" kind="class" language="C++" prot="public">
    <compoundname>acme_ray</compoundname>
    <basecompoundref refid="a00050" prot="public" virt="non-virtual">acme_entity</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00070_1a207574ea75dad0c31b7af2f098da345b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::acme_ray</definition>
        <argsstring>(in varargin)</argsstring>
        <name>acme_ray</name>
        <param>
          <type>in</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>Create a new C++ pointer to ray object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Class container for ACME ray object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="35" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a91e747de200a75a08bdd949840711b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::getOrigin</definition>
        <argsstring>(in self)</argsstring>
        <name>getOrigin</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Delete C++ pointer to ray object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get ray origin as ACME point object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="50" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1aa2de621cd6fe0941a07bc5b6c9833359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::getDirection</definition>
        <argsstring>(in self)</argsstring>
        <name>getDirection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get ray direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="59" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a63a301fb4543f43e6847c661e3b6f3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::setOrigin</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>setOrigin</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Set ray origin with an ACME point object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="67" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a4ce3f4cdba4fa8fce1e28f93821f6cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::setDirection</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>setDirection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Set ray direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="75" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a2d890976b5eda43ace6713792d7a872a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::copy</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>copy</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Copy ray object from another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="83" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1aff5555c555332123309da4f2c74c2337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::copyByHandle</definition>
        <argsstring>(in self, in handle)</argsstring>
        <name>copyByHandle</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Copy ray object from another ray handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="95" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a033c153ebd064e2b201e6d3c4e726ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::translate</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>translate</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Translate ray by vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="103" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a00ff799ec7640b4779344dc4831a1c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::transform</definition>
        <argsstring>(in self, in varargin)</argsstring>
        <name>transform</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>Transform ray by 4x4 affine transformation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="111" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a4cf6a4810cc08937dd6059a30e36421d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isInside</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isInside</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ACME point is inside the ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="119" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1af2f02ca7d25c69da0abf901a9b4443e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isDegenerated</definition>
        <argsstring>(in self)</argsstring>
        <name>isDegenerated</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Check if ray is degenerated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="131" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a1bf6c211c835ec9ff53bcf1e63ce1378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isApprox</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isApprox</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if rays are approximatively equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="139" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a19d3c72fdb5c813a39c75144588174c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::normalize</definition>
        <argsstring>(in self)</argsstring>
        <name>normalize</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Normalize direction vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="151" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1af70c2e685ee9843932cb7eaba630fd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::toVector</definition>
        <argsstring>(in self)</argsstring>
        <name>toVector</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Transform ray to vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="159" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a69488c924f457b9cce2420275cfe37b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::toNormalizedVector</definition>
        <argsstring>(in self)</argsstring>
        <name>toNormalizedVector</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Transform ray to normalized vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="167" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a05ced6835f21f6e04b7c9380f0d37990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::reverse</definition>
        <argsstring>(in self)</argsstring>
        <name>reverse</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Swap ray vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="175" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1ad2644434329c27559cf64e1e1ac29c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isParallel</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isParallel</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ray is parallel to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="183" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1ac13da54b8beaa79ff7523a32a20daee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isOrthogonal</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isOrthogonal</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ray is orthogonal to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="191" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1af375175ee422d002a81dd47597d37156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isCollinear</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isCollinear</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ray is collinear to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="199" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1aa958922b27ed18fc0b85a3764d098b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::isCoplanar</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>isCoplanar</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Check if ray is coplanar to an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="207" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1abb309178c9bdf229114a60b23d2a683c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::intersection</definition>
        <argsstring>(in self, in other_obj)</argsstring>
        <name>intersection</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>other_obj</declname>
        </param>
        <briefdescription>
<para>Intersect ray with an ACME object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="215" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a797c53044d9221bd7aa64fdec68081dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::disp</definition>
        <argsstring>(in self)</argsstring>
        <name>disp</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Display object data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="225" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1ae0ac3ad6f96136e80b4396ba28961626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function acme_ray::plot</definition>
        <argsstring>(in self, in figure_name, in color, in limit)</argsstring>
        <name>plot</name>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <param>
          <type>in</type>
          <declname>figure_name</declname>
        </param>
        <param>
          <type>in</type>
          <declname>color</declname>
        </param>
        <param>
          <type>in</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Plot ray object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="233" column="15"/>
      </memberdef>
      <memberdef kind="function" id="a00070_1a861003eca130e25d0b15ab3faef18dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>function</type>
        <definition>function acme_ray::type</definition>
        <argsstring>(in self)</argsstring>
        <name>type</name>
        <reimplements refid="a00050_1adadea5f13cd73eeac368db18de967f49">type</reimplements>
        <param>
          <type>in</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get object type as string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_ray.m" line="249" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00050_1a419b052079bcfcfb4e813365d647cb51" prot="private" static="no" mutable="no">
        <type>Property</type>
        <definition>Property acme_entity::objectHandle</definition>
        <argsstring></argsstring>
        <name>objectHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Class container for ACME entity object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="acme_entity.m" line="34" column="10" bodyfile="acme_entity.m" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>handle</label>
      </node>
      <node id="2">
        <label>acme_entity</label>
        <link refid="a00050"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>acme_ray</label>
        <link refid="a00070"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>handle</label>
      </node>
      <node id="2">
        <label>acme_entity</label>
        <link refid="a00050"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>acme_ray</label>
        <link refid="a00070"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="acme_ray.m" line="26" column="1" bodyfile="acme_ray.m" bodystart="27" bodyend="254"/>
    <listofallmembers>
      <member refid="a00050_1aa9604c371b05fe29d288f8229d673d70" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>acme_entity</name></member>
      <member refid="a00070_1a207574ea75dad0c31b7af2f098da345b" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>acme_ray</name></member>
      <member refid="a00070_1a2d890976b5eda43ace6713792d7a872a" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>copy</name></member>
      <member refid="a00070_1aff5555c555332123309da4f2c74c2337" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>copyByHandle</name></member>
      <member refid="a00070_1a797c53044d9221bd7aa64fdec68081dd" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>disp</name></member>
      <member refid="a00070_1aa2de621cd6fe0941a07bc5b6c9833359" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>getDirection</name></member>
      <member refid="a00070_1a91e747de200a75a08bdd949840711b88" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>getOrigin</name></member>
      <member refid="a00070_1abb309178c9bdf229114a60b23d2a683c" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>intersection</name></member>
      <member refid="a00070_1a1bf6c211c835ec9ff53bcf1e63ce1378" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isApprox</name></member>
      <member refid="a00070_1af375175ee422d002a81dd47597d37156" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isCollinear</name></member>
      <member refid="a00070_1aa958922b27ed18fc0b85a3764d098b21" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isCoplanar</name></member>
      <member refid="a00070_1af2f02ca7d25c69da0abf901a9b4443e4" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isDegenerated</name></member>
      <member refid="a00070_1a4cf6a4810cc08937dd6059a30e36421d" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isInside</name></member>
      <member refid="a00070_1ac13da54b8beaa79ff7523a32a20daee3" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isOrthogonal</name></member>
      <member refid="a00070_1ad2644434329c27559cf64e1e1ac29c6f" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>isParallel</name></member>
      <member refid="a00070_1a19d3c72fdb5c813a39c75144588174c9" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>normalize</name></member>
      <member refid="a00050_1a419b052079bcfcfb4e813365d647cb51" prot="private" virt="non-virtual"><scope>acme_ray</scope><name>objectHandle</name></member>
      <member refid="a00070_1ae0ac3ad6f96136e80b4396ba28961626" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>plot</name></member>
      <member refid="a00070_1a05ced6835f21f6e04b7c9380f0d37990" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>reverse</name></member>
      <member refid="a00070_1a4ce3f4cdba4fa8fce1e28f93821f6cee" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>setDirection</name></member>
      <member refid="a00070_1a63a301fb4543f43e6847c661e3b6f3ad" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>setOrigin</name></member>
      <member refid="a00070_1a69488c924f457b9cce2420275cfe37b6" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>toNormalizedVector</name></member>
      <member refid="a00070_1af70c2e685ee9843932cb7eaba630fd2d" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>toVector</name></member>
      <member refid="a00070_1a00ff799ec7640b4779344dc4831a1c11" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>transform</name></member>
      <member refid="a00070_1a033c153ebd064e2b201e6d3c4e726ba6" prot="public" virt="non-virtual"><scope>acme_ray</scope><name>translate</name></member>
      <member refid="a00070_1a861003eca130e25d0b15ab3faef18dbc" prot="public" virt="virtual"><scope>acme_ray</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
